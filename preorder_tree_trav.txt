/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> op;
        if(root==nullptr) return op;
        stack<TreeNode*> st1;
        st1.push(root);
        while(!st1.empty()){
            TreeNode* curr_node = st1.top();
            st1.pop();
            op.push_back(curr_node -> val);
            if(curr_node->right) st1.push(curr_node -> right);
            if(curr_node->left) st1.push(curr_node -> left);

        }
        return op;


    }
};