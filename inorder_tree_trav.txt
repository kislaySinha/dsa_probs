/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> op;
        if(root == nullptr) return op;
        stack<TreeNode*> st1;
        TreeNode* curr = root;
        while(!st1.empty() || curr!=nullptr){
            while(curr!=nullptr){
                st1.push(curr);
                curr = curr->left;
            }
            curr = st1.top();
            op.push_back(curr->val);
            st1.pop();
            curr=curr->right;
        }
        return op;
    }
};
