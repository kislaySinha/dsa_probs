/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode*> q;
        
        vector<int>vec;
        if(!root) return vec;
        q.push(root);
        while(!q.empty()){
            int lvl_size=q.size();
            TreeNode* curr =q.front();
            vec.push_back(curr->val);
            if(curr->right) q.push(curr->right);
            if(curr->left) q.push(curr->left);
            q.pop();
            while(lvl_size-1 != 0){
                if(q.front()->right) q.push(q.front()->right);
                if(q.front()->left) q.push(q.front()->left);
                q.pop();
                lvl_size--;
            }

        }
        return vec;
    }
};